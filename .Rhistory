ggplot(data = merged_hour_data, aes(x = TotalIntensity, y = Calories, alpha = Calories)) +
geom_point() +
labs(title = "Scatterplot of Calories vs. Total Intensity",
x = "Total Intensity",
y = "Calories") +
theme_minimal()
ggplot(data = merged_hour_data, aes(x = TotalIntensity, y = Calories, colour = Calories)) +
geom_point() +
labs(title = "Scatterplot of Calories vs. Total Intensity",
x = "Total Intensity",
y = "Calories") +
theme_minimal()
ggplot(data = merged_hour_data, aes(x = TotalIntensity, y = Calories, colour = Calories)) +
geom_point() +
labs(title = "Scatterplot of Calories vs. Total Intensity",
x = "Total Intensity",
y = "Calories") +
theme_minimal()
correlation <- cor(sleep_and_weight$TotalTimeInBed, sleep_and_weight$TotalMinutesAsleep)
correlation
calory_intensity_cor <- cor(merged_hour_data$TotalIntensity, merged_hour_data$Calories)
calory_intensity_cor
data_hourly <- merged_hour_data
glimpse(sleep_and_weight)
glimpse(data_daily)
glimpse(data_hourly)
?geom_bar
glimpse(sleep_and_weight)
ggplot(sleep_and_weight, aes(x = BMI ))+
geom_bar(width =  .60)
ggplot(sleep_and_weight, aes(x = WeightKg ))+
geom_bar(width =  .60)
ggplot(sleep_and_weight, aes(x = IsManualReport ))+
geom_bar(width =  .60)
ggplot(sleep_and_weight, aes(x = IsManualReport,
fill = IsManualReport))+
geom_bar(width =  .60)
glimpse(sleep_and_weight)
ggplot(sleep_and_weight, aes(x = Fat,
fill = Fat))+
geom_bar(width =  .60)
glimpse(sleep_and_weight)
sleep_and_weight %>% select(Id, WeightKg, TotalTimeInBed ) %>%
filter(WeightKg)
sleep_and_weight %>% select(Id, WeightKg, TotalTimeInBed )
ggplot(data= sleep_and_weight, aes(x = weight, y = TotalTimeInBed))+
geom_point()
ggplot(data= sleep_and_weight, aes(x = weight, y = TotalTimeInBed))+
geom_point()
ggplot(data = merged_hour_data, aes(x = TotalIntensity, y = Calories, colour = Calories)) +
geom_point() +
labs(title = "Scatterplot of Calories vs. Total Intensity",
x = "Total Intensity",
y = "Calories") +
theme_minimal()
ggplot(data= sleep_and_weight, aes(x = WeightKg, y = TotalTimeInBed))+
geom_point()
sleep_and_weight %>%
select(WightKg, TotalTimeInBed)
sleep_and_weight %>%
select(WeightKg, TotalTimeInBed)
sleep_and_weight %>%
select(WeightKg, TotalTimeInBed) %>%
summary()
sleep_and_weight %>%
select(WeightKg, TotalTimeInBed, BMI) %>%
summary()
glimpse(sleep_and_weight)
sleep_and_weight %>%
select(TotalSleepRecords)
sleep_and_weight %>%
select(TotalSleepRecords) %>%
arrange(desc(TotalSleepRecords)
arrange(desc(TotalSleepRecords)
sleep_and_weight %>%
select(TotalSleepRecords) %>%
arrange(desc(TotalSleepRecords))
View(sleep_and_weight)
sleep_weight_record <- sleep_and_weight %>%
select(-Date)
glimpse(sleep_weight_record)
View(sleep_weight_record)
sleep_weight_record %>%
filter(BMI >= 25)
sleep_weight_record %>%
filter(BMI >= 25)
filtered_data <- sleep_weight_record %>%
filter(BMI >= 25)
percentage_bmi_25_or_more <- (nrow(filtered_data) / nrow(sleep_weight_record)) * 100
cat("Percentage where BMI >= 25:", percentage_bmi_25_or_more, "%\n")
data_to_visualize <- data.frame(Category = c("BMI >= 25", "BMI < 25"),
Percentage = c(percentage_bmi_25_or_more, 100 - percentage_bmi_25_or_more))
ggplot(data_to_visualize, aes(x = Category, y = Percentage, fill = Category)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of BMI >= 25",
x = NULL, y = "Percentage") +
theme_minimal()
glimpse(sleep_weight_record)
ggplot(sleep_and_weight, aes(x = TotalMinutesAsleep, y = TotalTimeInBed)) +
geom_point() +
labs(title = "Relationship between TotalMinutesAsleep and TotalTimeInBed",
x = "Total Minutes Asleep",
y = "Total Time In Bed") +
theme_minimal()
ggplot(sleep_and_weight, aes(x = TotalMinutesAsleep, y = TotalTimeInBed, colour = BMI)) +
geom_point() +
labs(title = "Relationship between TotalMinutesAsleep and TotalTimeInBed",
x = "Total Minutes Asleep",
y = "Total Time In Bed") +
theme_minimal()
glimpse(data_daily)
glimpse(data_hourly)
daily_average_steps <- data_daily %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotaSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(SedentaryMinutes,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
daily_average_steps <- data_daily %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(SedentaryMinutes,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
head(daily_average_steps)
user_type_sum <- data_daily %>%
group_by(user_type) %>%
summarise(total= n()) %>%
mutate(total_percent= scales::percent (total/sum(total)))
daily_average_steps <- data_daily %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(SedentaryMinutes,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
user_type_sum <- daily_average_steps %>%
group_by(user_type) %>%
summarise(total= n()) %>%
mutate(total_percent= scales::percent (total/sum(total)))
user_type_sum
head(daily_average_steps)
activity_sleep_final <- merge(data_daily, daily_average_steps[c("Id","user_type")], by="Id")
activity_sleep_final$user_type <-ordered(activity_sleep_final$user_type, levels= c("sedentary","lightly active","fairly active","very active"))
head(activity_sleep_final)
ggplot(activity_sleep_final[which(activity_sleep_final$TotalSteps>0),],
aes(user_type,totalsteps, fill=user_type))+
geom_boxplot()+
stat_summary(fun="mean", geom="point",
shape=23,size=2, fill="white")+
labs(title= "Daily Steps by User Type",
x= " ", y="total steps")+
scale_fill_brewer(palette="BuPu")
ggplot(activity_sleep_final[which(activity_sleep_final$TotalSteps>0),],
aes(user_type,TotalSteps, fill=user_type))+
geom_boxplot()+
stat_summary(fun="mean", geom="point",
shape=23,size=2, fill="white")+
labs(title= "Daily Steps by User Type",
x= " ", y="total steps")+
scale_fill_brewer(palette="BuPu")
ggplot(activity_sleep_final[which(activity_sleep_final$TotalSteps>0),],
aes(user_type,TotalSteps, fill=user_type))+
geom_boxplot()+
stat_summary(fun="mean", geom="point",
shape=23,size=2, fill="white")+
labs(title= "Daily Steps by User Type",
x= " ", y="total steps")+
scale_fill_brewer(palette="BuPu")
head(combined_data_clean)
head(combined_data_clean)
daily_activity <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
sleep_day <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv")
heart_rate_seconds <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/heartrate_seconds_merged.csv")
weight_log <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv")
hour_calories <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv")
hour_intensitities <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv")
hour_steps <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv")
head(daily_activity, 2)
n_distinct(daily_activity$Id)
#libraries --------------------------------------------------------------------
library(tidyverse)
library(janitor)
library(here)
library(skimr)
n_distinct(daily_activity$Id)
daily_activity %>%
select(TotalSteps,SedentaryMinutes,Calories,TotalDistance) %>%
summary()
weight_log_bmi <- weight_log %>%
mutate(user_type = case_when(
BMI < 17 ~ "thinness",
BMI < 18.5 ~ "underweight",
BMI >= 18.5 & BMI < 24.9 ~ "normal weight",
BMI >= 25 ~ "overweight",
BMI >= 30 ~ "obesity"
))
head(weight_log_bmi)
percentage_bmi <- weight_log_bmi %>%
group_by(user_type) %>%
summarise(total= n()) %>%
mutate(total_percent = scales::percent (total/sum(total)))
head(percentage_bmi)
ggplot(percentage_bmi, aes(x = user_type, y = total_percent)) +
geom_boxplot() +
labs(
x = "weight_category",
y = "BMI Percentage",
title = "Box Plot of BMI Percentages by Weight Category"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=daily_activity,
aes(x=TotalSteps, y=Calories, colour = Calories)) +
geom_point()+
labs(title = "Steps taken vs Calories", subtitle = "Relationship between
steps taken per day and Calories burnt")
ggplot(data=sleep_day,
aes(x=TotalMinutesAsleep, y=TotalTimeInBed, alpha = TotalMinutesAsleep, alpha = TotalTimeAsleep)) +
geom_point()+ labs(title = "Total Time in Bed vs Time Asleep")
combined_data <- merge(sleep_day, daily_activity, by = "Id", all.x = TRUE, all.y = TRUE)
combined_data_clean <- na.omit(combined_data)
ggplot(combined_data, aes(x = TotalMinutesAsleep, y = SedentaryMinutes)) +
geom_point() +
labs(
x = "Total Minutes Asleep",
y = "Sedentary in Minutes",
title = "Relationship Between Sleep Duration and Sedentary Minutes"
)
correlation
ggplot(data = combined_data_clean,
aes(x= TotalMinutesAsleep, y=TotalSteps))+
geom_point()+
labs(
x= "Total Minutes Asleep",
y= "TotalSteps",
title "Correlation between Minutes Asleep and Total Steps"
glimpse(combined_data_clean)
ggplot(data = combined_data_clean,
aes(x= TotalMinutesAsleep, y=TotalSteps))+
geom_point()+
labs(
x= "Total Minutes Asleep",
y= "TotalSteps",
title "Correlation between Minutes Asleep and Total Steps",
ggplot(data = combined_data_clean,
aes(x= TotalMinutesAsleep, y=TotalSteps))+
geom_point()+
labs(
x= "Total Minutes Asleep",
y= "TotalSteps",
title = "Correlation between Minutes Asleep and Total Steps",
subtitle = "Minutes asleep and Steps per day"
)
ggplot(data = combined_data_clean,
aes(x= TotalMinutesAsleep, y=TotalSteps))+
geom_smooth()+
labs(
x= "Total Minutes Asleep",
y= "TotalSteps",
title = "Correlation between Minutes Asleep and Total Steps",
subtitle = "Minutes asleep and Steps per day"
)
ggplot(data = combined_data_clean,
aes(x= TotalSteps, y=TotalMinutesAsleep))+
geom_smooth()+
labs(
x= "TotalSteps",
y= "Total Minutes Asleep",
title = "Correlation between Minutes Asleep and Total Steps",
subtitle = "Minutes asleep and Steps per day"
)
ggplot(data = combined_data_clean,
aes(x= TotalMinutesAsleep, y=TotalSteps))+
geom_smooth()+
labs(
x= "Total Minutes Asleep",
y= "TotalSteps",
title = "Correlation between Minutes Asleep and Total Steps",
subtitle = "Minutes asleep and Steps per day"
)
install.packages("outliers")
library(outliers)
ggplot(data = combined_data_clean, aes(x = TotalMinutesAsleep, y = TotalSteps )) +
geom_point()
combined_data_clean %>%
select(TotalSteps, TotalMinutesAsleep) %>%
summary()
combined_data_clean %>%
select(TotalSteps, TotalMinutesAsleep) %>%
summary()
combined_data_clean[outliers, ]
library(outliers)
combined_data_clean[outliers, ]
combined_data_clean[outliers, ]
combined_data_clean[outliers, ]
combined_data_clean[outliers, ]
combined_data_clean[outliers, ]
combined_data_clean <- combined_data %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(TotalMinutesAsleep,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
combined_data_clean %>%
select(TotalSteps, TotalMinutesAsleep) %>%
summary()
head(combined_data_clean)
percentages_user_type_steps <- combined_data_clean %>%
group_by(user_type) %>%
summarise(total= n()) %>%
mutate(total_percent= scales::percent (total/sum(total)))
head(percentages_user_type_steps)
ggplot(combined_data_clean[which(combined_data_clean$avg_daily_steps>0),],
aes(user_type,avg_daily_steps, fill=user_type))+
geom_boxplot()+
stat_summary(fun="mean", geom="point",
shape=23,size=2, fill="white")+
labs(title= "Box Plot of the Daily Steps by User Type",
x= " ", y="total steps")+
scale_fill_brewer(palette="BuPu")
n_distinct(combined_data$Id)
ggplot(combined_data, aes(x = TotalMinutesAsleep, y = SedentaryMinutes)) +
geom_point() +
labs(
x = "Total Minutes Asleep",
y = "Sedentary in Minutes",
title = "Relationship Between Sleep Duration and Sedentary Minutes"
)
combined_data_clean <- combined_data %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(TotalMinutesAsleep,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
head(combined_data_clean)
combined_data_clean <- combined_data_clean %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(TotalMinutesAsleep,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
combined_data_clean <- combined_data %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(TotalMinutesAsleep,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
combined_data_clean <- combined_data_clean %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(TotalMinutesAsleep,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
glimpse(combined_data_clean)
glimpse(combined_data)
combined_data_clean <- combined_data %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(TotalMinutesAsleep,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
head(combined_data_clean)
percentages_user_type_steps <- combined_data_clean %>%
group_by(user_type) %>%
summarise(total= n()) %>%
mutate(total_percent= scales::percent (total/sum(total)))
head(percentages_user_type_steps)
correlation <- cor(combined_data_clean$TotalMinutesAsleep, combined_data_clean$TotalSteps)
ggplot(combined_data_clean, aes(x = TotalMinutesAsleep, y = TotalSteps)) +
geom_point() +
labs(
x = "Total Minutes Asleep",
y = "Total Steps",
title = "Relationship Between Sleep Duration and Daily Step Count"
)
ggplot(combined_data, aes(x = TotalMinutesAsleep, y = TotalSteps)) +
geom_point() +
labs(
x = "Total Minutes Asleep",
y = "Total Steps",
title = "Relationship Between Sleep Duration and Daily Step Count"
)
ccorrelation <- cor(combined_data_clean$TotalMinutesAsleep,
combined_data_clean$TotalSteps) combined_data_clean$TotalSteps)
correlation <- cor(combined_data_clean$TotalMinutesAsleep,
combined_data_clean$TotalSteps) combined_data_clean$TotalSteps)
correlation <- cor(combined_data_clean$TotalMinutesAsleep,
combined_data_clean$TotalSteps)
n_distinct(combined_data$Id)
ggplot(combined_data, aes(x = TotalMinutesAsleep, y = SedentaryMinutes)) +
geom_point() +
labs(
x = "Total Minutes Asleep",
y = "Sedentary in Minutes",
title = "Relationship Between Sleep Duration and Sedentary Minutes"
)
combined_data %>%
select(TotalSteps) %>%
summary()
combined_data_clean <- combined_data %>%
group_by (Id) %>%
summarise(avg_daily_steps= mean(TotalSteps),
avg_daily_cal= mean(Calories),
avg_daily_sleep= mean(TotalMinutesAsleep,
na.rm = TRUE)) %>%
mutate(user_type= case_when(
avg_daily_steps < 5000 ~ "sedentary",
avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
avg_daily_steps >= 10000 ~"very active"
))
head(combined_data_clean)
percentages_user_type_steps <- combined_data_clean %>%
group_by(user_type) %>%
summarise(total= n()) %>%
mutate(total_percent= scales::percent (total/sum(total)))
head(percentages_user_type_steps)
ggplot(combined_data_clean[which(combined_data_clean$avg_daily_steps>0),],
aes(user_type,avg_daily_steps, fill=user_type))+
geom_boxplot()+
stat_summary(fun="mean", geom="point",
shape=23,size=2, fill="white")+
labs(title= "Box Plot of the Daily Steps by User Type",
x= " ", y="total steps")+
scale_fill_brewer(palette="BuPu")
glimpse(daily_activity)
#dealing with dates -load lubridate()
daily_activity_clean <- daily_activity %>%
na.omit() %>%
mutate(ActivityDate = as.Date(ActivityDate, format = "%m/%d/%Y"))
head(daily_activity_clean)
Activity_by_week <- daily_activity_clean %>%
mutate(weekday = weekdays(ActivityDate))
Activity_by_week$weekday <-ordered(Activity_by_week$weekday, levels=c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday"))
head(Activity_by_week)
# Define custom colors and labels
custom_colors_steps <- c('#ff99cc', '#ff6666', '#99ff99', '#cccccc', '#ffcc99', '#33ccff', '#99ccff')
weekday_labels <- unique(Activity_by_week$weekday)
ggplot(Activity_by_week) +
geom_col(aes(weekday, TotalSteps, fill = weekday)) +
scale_fill_manual(values = custom_colors_steps, breaks = weekday_labels, labels = weekday_labels) +  # Set custom colors and labels
labs(title = "Daily Steps per Weekday", x = "Weekdays", y = "Number of Steps") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.2)) +
guides(fill = guide_legend(title = "Weekday"))  # Add legend title
custom_colors_r <- c('#ff99cc', '#ff6666', '#99ff99', '#cccccc', '#ffcc99', '#33ccff', '#99ccff')
ggplot(Activity_by_week) +
geom_col(aes(weekday, SedentaryMinutes, fill = weekday)) +
scale_fill_manual(values = custom_colors_r) +  # Set custom colors
labs(title = "Daily Sedentary Period (Minutes)", x = "Weekdays", y = "Sedentary Minutes") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.2))
# Define custom colors
custom_colors <- c('#33ccff', '#ff6666', '#99ff99', '#ffcc99', '#cccccc', '#ff99cc', '#99ccff')
ggplot(Activity_by_week) +
geom_col(aes(weekday, VeryActiveMinutes, fill = weekday)) +
geom_text(aes(weekday, VeryActiveMinutes, label = VeryActiveMinutes), vjust = -0.5) +  # Add labels
labs(title = "Very Active Days per Weekday", x = "Weekdays", y = "Very Active Minutes") +
scale_fill_manual(values = custom_colors) +  # Set custom colors
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.2))
