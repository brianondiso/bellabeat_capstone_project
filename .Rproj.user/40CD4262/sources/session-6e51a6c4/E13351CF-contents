install.packages("here")
install.packages("skimr")

#Table of content

#About the company

#Characters and products

Research Questions
#What are some trends in smart device usage?
#How could these trends apply to Bellabeat customers?
#How could these trends help influence Bellabeat marketing strategy?
  

You will produce a report with the following deliverables:
#1. A clear summary of the business task
#2. A description of all data sources used
#3. Documentation of any cleaning or manipulation of data
#4. A summary of your analysis
#5. Supporting visualizations and key findings
#6. Your top high-level content recommendations based on your analysis


Summary of the business task

1. What are some trends in smart device usage?
2. How could these trends apply to Bellabeat customers?
3. How could these trends help influence Bellabeat marketing strategy?
  
  Case Study Roadmap - Prepare

#Loading rquired library  to load data into R
library(here)
library(skimr)
dailyActivity <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
dailyCalories <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/dailyCalories_merged.csv")
dailyIntensities < - read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/dailyIntensities_merged.csv")
dailySteps <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/dailySteps_merged.csv")
sleepDay <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv")
hourlyCalories <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv")
hourlyIntensities <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv")
hourlySteps <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv")
weight <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv")
minuteStepsNarrow <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/minuteStepsNarrow_merged.csv")
minuteStepsWide <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/minuteStepsWide_merged.csv")
minuteSleep <- read.csv("Data/FitBit Data/Fitabase Data 4.12.16-5.12.16/minuteSleep_merged.csv")

#Merge daily Acivity with daily calory
glimpse(dailyActivity)
glimpse(dailyCalories)

merged_day_acticity <- merge(dailyActivity, dailyCalories, by = "Id")
glimpse(merged_day_acticity)

#drop Calories y and rename Calories.x to Calories

my_data_daily <- merged_day_acticity [, !(names(merged_day_acticity) == "Calories.y")]

glimpse(my_data_daily)

data_daily <- my_data_daily [, !(names(my_data_daily) == "Calories.x")]

#merge hourly activity.
glimpse(hourlyCalories)
glimpse(hourlyIntensities)
glimpse(hourlySteps)

merged_hour_data <- merge(hourlyCalories, hourlyIntensities, by = c("Id", "ActivityHour"))
merged_hour_data <- merge(merged_hour_data, hourlySteps, by = c("Id", "ActivityHour"))

#Performer EDA on the data;
view(merged_hour_data)

merged_hour_data %>% 
  summary()

ggplot(data = merged_hour_data, aes(x = TotalIntensity, y = Calories, colour = Calories)) +
  geom_point() +
  labs(title = "Scatterplot of Calories vs. Total Intensity",
       x = "Total Intensity",
       y = "Calories") +
  theme_minimal()

calory_intensity_cor <- cor(merged_hour_data$TotalIntensity, merged_hour_data$Calories)

data_hourly <- merged_hour_data

library(janitor)
glimpse(data_daily)
#Let us get a summary of our daily data
data_daily %>%
  summary()

data_daily %>% 
  summarise(average_steps_per_day = mean(TotalSteps))

library(tidyverse)


ggplot(data = data_daily)+
  geom_point(mapping = aes(x= TotalSteps, y=Calories, colour = Calories))

correlation_1 <- cor(data_daily$TotalSteps, data_daily$Calories) 

ggplot(data = data_daily)+
  geom_point(mapping = aes(x=SedentaryMinutes, y=Calories, colour = Calories))

glimpse(weight)
weight %>% 
  summary()
glimpse(sleepDay)

sleep_and_weight = merge(sleepDay, weight, by = "Id") %>% drop_na()
glimpse(sleep_and_weight)

ggplot(data = sleep_and_weight)+
  geom_point(mapping = aes(x=TotalTimeInBed , y=TotalMinutesAsleep))
sleep_weight_record <- sleep_and_weight %>% 
  select(-Date)

#We want to prove that the more time you spend in bed the more minutes you will sleep

ggplot(data = sleep_and_weight, aes(x = TotalTimeInBed, y = TotalMinutesAsleep)) +
  geom_point() +
  labs(title = "Scatterplot of Total Time in Bed vs. Total Minutes Asleep",
       x = "Total Time in Bed",
       y = "Total Minutes Asleep") +
  theme_minimal()

correlation <- cor(sleep_and_weight$TotalTimeInBed, sleep_and_weight$TotalMinutesAsleep)

#The null hypothesis (H0) is that there is no linear relationship between the two variables, 
#and the alternative hypothesis (Ha) is that there is a linear relationship

#A value close to 1 indicates a strong positive linear relationship.
#A value close to -1 indicates a strong negative linear relationship.
#A value close to 0 indicates little to no linear relationship.

#data
glimpse(sleep_weight_record)
glimpse(data_daily)
glimpse(data_hourly)

sleep_and_weight %>% 
  select(WeightKg, TotalTimeInBed, BMI) %>% 
  summary()

View(sleep_weight_record)

#Records where BMI in >= 25

library(dplyr)

# Filter the records where BMI is >= 25
filtered_data <- sleep_weight_record %>%
  filter(BMI >= 25)

# Calculate the percentage
percentage_bmi_25_or_more <- (nrow(filtered_data) / nrow(sleep_weight_record)) * 100

# Print the percentage
cat("Percentage where BMI >= 25:", percentage_bmi_25_or_more, "%\n")



library(ggplot2)

# Create a data frame for visualization
data_to_visualize <- data.frame(Category = c("BMI >= 25", "BMI < 25"),
                                Percentage = c(percentage_bmi_25_or_more, 100 - percentage_bmi_25_or_more))

# Create a bar plot
ggplot(data_to_visualize, aes(x = Category, y = Percentage, fill = Category)) +
  geom_bar(stat = "identity") +
  labs(title = "Percentage of BMI >= 25",
       x = NULL, y = "Percentage") +
  theme_minimal()

sleep_and_weight %>% 
  select(TotalMinutesAsleep, TotalTimeInBed)

library(ggplot2)

# Create a scatterplot
ggplot(sleep_and_weight, aes(x = TotalMinutesAsleep, y = TotalTimeInBed, colour = BMI)) +
  geom_point() +
  labs(title = "Relationship between TotalMinutesAsleep and TotalTimeInBed",
       x = "Total Minutes Asleep",
       y = "Total Time In Bed") +
  theme_minimal()

#There is a positive correlation between Time in Bed and Minutes A aleep, 
#Indicating that the more time that you spend in bed.
#The more you minutes you will be a sleep. 

Daily Average Steps
Distribution of users
We will now take the average steps taken by every users and classify them into four groups such as:
  
  Sedentary - less than 5000 steps a day.
Lightly active - between 5000 and 7500 steps per day.
fairly active - between 7500 and 10000 steps per day.
Very active - more than 10000 steps per day.
First we will calculate the average steps of users.


daily_average_steps <- data_daily %>% 
  group_by (Id) %>% 
  summarise(avg_daily_steps= mean(TotalSteps), 
            avg_daily_cal= mean(Calories), 
            avg_daily_sleep= mean(SedentaryMinutes, 
                                  na.rm = TRUE)) %>% 
  mutate(user_type= case_when(
    avg_daily_steps < 5000 ~ "sedentary",
    avg_daily_steps >= 5000 & avg_daily_steps <7499 ~"lightly active",
    avg_daily_steps >= 7499 & avg_daily_steps <9999 ~"fairly active",
    avg_daily_steps >= 10000 ~"very active"
  ))

head(daily_average_steps)

user_type_sum <- daily_average_steps %>%
  group_by(user_type) %>%
  summarise(total= n()) %>%
  mutate(total_percent= scales::percent (total/sum(total)))

user_type_sum

#to add the user type into the day_base_data
activity_sleep_final <- merge(data_daily, daily_average_steps[c("Id","user_type")], by="Id") 

activity_sleep_final$user_type <-ordered(activity_sleep_final$user_type, levels= c("sedentary","lightly active","fairly active","very active")) 

head(activity_sleep_final)

#steps vs types of users
ggplot(activity_sleep_final[which(activity_sleep_final$TotalSteps>0),], 
       aes(user_type,TotalSteps, fill=user_type))+
  geom_boxplot()+
  stat_summary(fun="mean", geom="point", 
               shape=23,size=2, fill="white")+
  labs(title= "Daily Steps by User Type", 
       x= " ", y="total steps")+
  scale_fill_brewer(palette="BuPu")